<!doctype html>
<html>
<head>
    <script type="text/javascript" src="./webix/codebase/webix.js"></script>
    <link rel="stylesheet" type="text/css" href="./webix/codebase/webix.css">
    <style>

        .menuBG {
            background: #888 !important;
        }

        .formBG {
            background: #efefef !important;
        }

    </style>
</head>
<body>
<input type="hidden" id="selectedRemoteDir" name="selectedRemoteDir" value="/"/>
<input type="hidden" id="selectedLocalDir" name="selectedLocalDir" value=""/>
<script>

function addMessage(msg, color) {
    color = color || 'inherit';
    var values = $$("FTPResponseMessages").getValues();
    var new_msg = '<div style="font-family: \'Courier New\' !important; color: ' + color + ';">[' + new Date().toTimeString() + '] ' + msg + "</div>" + values.msg;
    $$("FTPResponseMessages").setValues({msg: new_msg})
}

function downloadRemoteFiles(ids) {
    if (ids instanceof Array)
        var idArr = ids;
    else
        var idArr = new Array(ids);

    $$("localFiles").showProgress({
        type: "icon"
    });

    if (document.getElementById("selectedLocalDir").value) {
        for (var i = 0; i < idArr.length; i++) {
            var srcParts = idArr[i].split("/");
            var destID = document.getElementById("selectedLocalDir").value + "\\" + srcParts.pop();
            var msgID = 'd_' + i + '_' + new Date().getTime();
            webix.ajax().sync().post("/DownloadFile", {
                source: idArr[i],
                destination: destID
            }, function (text, data) {
                data = data.json();
                addMessage(data.ftp_msg, data.msg_col);
            });
        }
        $$("remoteFiles").unselectAll();
        $$("localFiles").hideProgress();
        $$("localFiles").load("LocalFiles?parent=" + document.getElementById("selectedLocalDir").value);
    } else {
        addMessage("No local drive selected!", 'red');
    }
}

function uploadLocalFiles(ids) {
    if (ids instanceof Array)
        var idArr = ids;
    else
        var idArr = new Array(ids);

    $$("remoteFiles").showProgress({
        type: "icon"
    });

    for (var i = 0; i < idArr.length; i++) {
        var srcParts = idArr[i].split("\\");
        var destID = document.getElementById("selectedRemoteDir").value + "/" + srcParts.pop();
        var msgID = 'u_' + i + '_' + new Date().getTime();
        webix.ajax().sync().post("/UploadFile", {
            source: idArr[i],
            destination: destID
        }, function (text, data) {
            data = data.json();
            addMessage(data.ftp_msg, data.msg_col);
        });
    }
    $$("localFiles").unselectAll();
    $$("remoteFiles").hideProgress();
    $$("remoteFiles").load("RemoteFiles?parent=" + document.getElementById("selectedRemoteDir").value);
}

function deleteRemoteFiles(ids) {
    webix.modalbox({
        title: "Please confirm",
        text: "Really delete the selected file(s)?",
        buttons: ["Yes", "No"],
        width: 500,
        callback: function (result) {
            if (result == 0) {
                var length = 1;
                if (ids instanceof Array)
                    length = ids.length;
                for (var i = 0; i < length; i++) {
                    var filename = length > 1 ? ids[i] : ids;
                    webix.ajax().sync().post("/DeleteRemoteFile", {
                        file: filename
                    }, function (text, data) {
                        data = data.json();
                        if (data.deleted) {
                            $$("remoteFiles").remove(filename);
                        }
                        addMessage(data.ftp_msg, data.msg_col);
                    });
                }
            }
        }
    });
}

function deleteRemoteFolder(folder) {
    webix.modalbox({
        title: "Please confirm",
        text: "Really delete the selected folder?",
        buttons: ["Yes", "No"],
        width: 500,
        callback: function (result) {
            if (result == 0) {
                webix.ajax().sync().post("/DeleteRemoteFolder", {
                    folder: folder
                }, function (text, data) {
                    data = data.json();
                    if (data.removed) {
                        $$("remoteFolders").remove(folder);
                    }
                    addMessage(data.ftp_msg, data.msg_col);
                });
            }
        }
    });
}

function createRemoteDir(node) {
    webix.ui({
        view: "popup",
        id: "inputFolderName",
        width: 200,
        head: false,
        body: {
            view: "form",
            borderless: true,
            elements: [
                { view: "text", id: "newFolderName", label: "Enter folder name:", name: "name" },
                { view: "button", value: "Create", click: function () {
                    if (this.getParentView().validate()) {
                        var branchID = document.getElementById("selectedRemoteDir").value;
                        var newFolderName = branchID + "/" + $$("newFolderName").getValue();
                        webix.ajax().sync().post("/CreateRemoteDir", {
                            foldername: newFolderName
                        }, function (text, data) {
                            data = data.json();
                            if (data.created) {
                                if ($$("remoteFolders").isBranchOpen(branchID) == false)
                                    $$("remoteFolders").open(branchID);
                                else
                                    $$("remoteFolders").loadBranch(branchID);
                                $$("remoteFolders").select(newFolderName);
                                document.getElementById("selectedRemoteDir").value = newFolderName;
                                $$("remoteFiles").clearAll();
                            }
                            addMessage(data.ftp_msg, data.msg_col);
                        });
                        this.getTopParentView().hide();
                    }
                    else
                        webix.message({ type: "error", text: "Please enter a folder name." });
                }}
            ],
            rules: {
                "name": webix.rules.isNotEmpty
            },
            elementsConfig: {
                labelPosition: "top"
            }
        }
    }).show(node);
}

var connectForm = [
    {
        id: "ftp",
        margin: 5,
        borderless: true,
        cols: [
            { view: "text", id: "ftp_host", value: '', label: "Host" },
            { view: "text", id: "ftp_port", value: '', label: "Port", width: 160 },
            { view: "text", id: "ftp_user", value: '', label: "Username", width: 260 },
            { view: "text", type: "password", id: "ftp_pass", value: '', label: "Password", width: 260 },
            { view: "button", id: "connButton", hidden: false, value: 'Connect', width: 120,
                on: {
                    onItemClick: function (elm) {
                        addMessage("Trying to connect ...");
                        webix.ajax().post("/Connect", {
                            host: $$("ftp_host").getValue(),
                            port: $$("ftp_port").getValue(),
                            user: $$("ftp_user").getValue(),
                            pass: $$("ftp_pass").getValue()
                        }, function (text, data, xhr) {
                            data = data.json();
                            if (data.connected) {
                                $$("remoteFolders").clearAll();
                                $$("remoteFolders").load('/RemoteFolders');
                                $$("remoteFiles").clearAll();
                                $$("remoteFiles").load('/RemoteFiles');
                                $$("connButton").hide();
                                $$("discButton").show();
                                var d = new Date();
                                var exp_date = new Date(d.getTime() + 1000 * 60 * 60 * 24 * 365);
                                webix.storage.cookie.put('ftp', {
                                    ftp_host: $$("ftp_host").getValue(),
                                    ftp_port: $$("ftp_port").getValue(),
                                    ftp_user: $$("ftp_user").getValue(),
                                    ftp_pass: $$("ftp_pass").getValue()
                                }, null, exp_date);
                                webix.storage.cookie.put('con', { connected: true });
                            }
                            addMessage(data.ftp_msg, data.msg_col);
                        });
                    }
                }
            },
            { view: "button", id: "discButton", hidden: true, value: 'Disconnect', width: 120,
                on: {
                    onItemClick: function (elm) {
                        webix.modalbox({
                            title: "Please confirm",
                            text: "Really quit the FTP session?",
                            buttons: ["Yes", "No"],
                            width: 500,
                            callback: function (result) {
                                if (result == 0) {
                                    addMessage("Trying to quit FTP session ...");
                                    webix.ajax().timeout(6000).post("/Disconnect", null, function (text, data, xhr) {
                                        data = data.json();
                                        $$("connButton").show();
                                        $$("discButton").hide();
                                        $$("remoteFolders").clearAll();
                                        $$("remoteFiles").clearAll();
                                        document.getElementById("selectedRemoteDir").value = "/";
                                        xhr.ontimeout = function () {
                                            addMessage("Sorry! The server doesn´t respond. Please try again later.", "red");
                                        };
                                        $$("FTPResponseMessages").setValues({msg: ""});
                                        webix.storage.cookie.remove('con');
                                        addMessage(data.ftp_msg, data.msg_col);
                                    });
                                }
                            }
                        });
                    }
                }
            }
        ]
    }
];

var remoteLayout = {
    cols: [
        {
            rows: [
                {
                    template: "Remote Drive",
                    type: "header",
                    height: 48
                },
                {
                    view: "tree",
                    id: "remoteFolders",
                    select: true,
                    width: 300,
                    on: {
                        onBeforeOpen: function (id) {
                            if (this.getItem(id).$count === -1)
                                this.loadBranch(id);
                        },
                        onItemClick: function (id) {
                            document.getElementById("selectedRemoteDir").value = id;
                            $$("remoteFiles").clearAll();
                            $$("remoteFiles").load('/RemoteFiles?parent=' + id, 'json', function (text, data) {
                                var data = data.json();
                                addMessage(data.ftp_msg, data.msg_col);
                            });
                        }
                    }
                }
            ]
        },
        {view: "resizer"},
        {
            rows: [
                {
                    view: "toolbar",
                    id: "remoteTools",
                    height: 48,
                    css: "menuBG",
                    cols: [
                        { view: "button", type: "iconButton", align: "left", icon: "arrow-down", label: "Download", width: 120,
                            on: {
                                onItemClick: function () {
                                    var ids = $$("remoteFiles").getSelectedId();
                                    if (ids) {
                                        downloadRemoteFiles(ids);
                                        return false;
                                    }
                                }
                            }
                        },
                        { view: "button", type: "iconButton", align: "left", icon: "close", label: "Delete", width: 100,
                            on: {
                                onItemClick: function () {
                                    var ids = $$("remoteFiles").getSelectedId();
                                    if (ids) {
                                        deleteRemoteFiles(ids);
                                    }
                                    if (!ids && document.getElementById("selectedRemoteDir").value != "/") {
                                        deleteRemoteFolder(document.getElementById("selectedRemoteDir").value);
                                    }
                                }
                            }
                        },
                        { view: "button", id: "newFolder", type: "iconButton", align: "left", icon: "folder-open-o", label: "New Folder", width: 130,
                            on: {
                                onItemClick: function () {
                                    if ($$("remoteFolders").count() > 0)
                                        createRemoteDir(this.$view);
                                }
                            }
                        }
                    ]
                },
                {   // FILES IN SELECTED REMOTE DIR
                    view: "tree",
                    id: "remoteFiles",
                    select: true,
                    multiselect: true,
                    drag: true,
                    onContext: {},
                    on: {
                        onBeforeDrop: function (context) {
                            $$("remoteFiles").drag = "source";
                            $$("remoteFiles").refresh();
                            $$("localFiles").drag = "target";
                            $$("localFiles").refresh();
                            uploadLocalFiles(context.source);
                            return false;
                        }
                    }
                }
            ]
        }
    ]
};

var localLayout = {
    cols: [
        {
            rows: [
                {
                    template: "Local Drive",
                    type: "header",
                    height: 48
                },
                {
                    view: "tree",
                    id: "localFolders",
                    select: true,
                    width: 300,
                    url: '/LocalDisks',
                    on: {
                        onBeforeOpen: function (id) {
                            var fc = this.getFirstChildId(id);
                            if (isNaN(fc) == false) {
                                this.remove(fc);
                                this.load('/LocalFolders?parent=' + id);
                            }
                        },
                        onItemClick: function (id) {
                            document.getElementById("selectedLocalDir").value = id;
                            $$("localFiles").clearAll();
                            $$("localFiles").load('/LocalFiles?parent=' + id, 'json', function (text, data, http_request) {
                                var data = data.json();
                                addMessage(data.ftp_msg, data.msg_col);
                            });
                        }
                    }
                }
            ]
        },
        {view: "resizer"},
        {
            rows: [
                {
                    view: "toolbar",
                    id: "localTools",
                    height: 48,
                    css: "menuBG",
                    cols: [
                        { view: "button", type: "iconButton", align: "left", icon: "arrow-up", label: "Upload", width: 100,
                            on: {
                                onItemClick: function () {
                                    var ids = $$("localFiles").getSelectedId();
                                    uploadLocalFiles(ids);
                                }
                            }
                        }
                    ]
                },
                {   // FILES IN SELECTED LOCAL DIR
                    view: "tree",
                    id: "localFiles",
                    select: true,
                    multiselect: true,
                    url: '/LocalFiles?parent=' + document.getElementById("selectedLocalDir").value,
                    drag: true,
                    onContext: {},
                    on: {
                        onBeforeDrop: function (context) {
                            $$("localFiles").drag = "source";
                            $$("localFiles").refresh();
                            $$("remoteFiles").drag = "target";
                            $$("remoteFiles").refresh();
                            downloadRemoteFiles(context.source);
                            return false;
                        }
                    }
                }
            ]
        }
    ]
};

var FTPResponseMessages = {
    id: "FTPResponseMessages",
    scroll: true,
    //css: "formBG",
    data: {
        msg: ""
    },
    template: function (obj) {
        return '<div class="ftp_msg">' + obj.msg + '</div>';
    },
    height: 200
};

webix.ready(function () {
    webix.ui({
        container: document.body,
        type: "space",
        rows: [
            {
                template: "<%- title %>",
                type: "header",
                height: 48
            },
            {
                view: "form",
                css: "formBG",
                scroll: false,
                elements: connectForm
            },
            {
                cols: [
                    localLayout,
                    {width: 10},
                    remoteLayout
                ]
            },
            {view: "resizer"},
            {
                borderless: true,
                view: "tabview",
                cells: [
                    {
                        header: "Log",
                        width: 300,
                        body: FTPResponseMessages
                    },
                    {
                        header: "Transfer",
                        width: 300,
                        body: {height: 200}
                    }
                ]
            }
        ]
    });

    var ftpCookie = webix.storage.cookie.get('ftp') || {};
    $$("ftp_host").setValue(ftpCookie.ftp_host || '');
    $$("ftp_port").setValue(ftpCookie.ftp_port || '21');
    $$("ftp_user").setValue(ftpCookie.ftp_user || '');
    $$("ftp_pass").setValue(ftpCookie.ftp_pass || '');

    var is_connected = <%= connected %>;
    var welcome = "<%= welcome %>";
    var welcome_col = "<%= welcome_col %>";

    if (is_connected) {
        $$("remoteFolders").clearAll();
        $$("remoteFolders").load('/RemoteFolders');
        $$("remoteFiles").clearAll();
        $$("remoteFiles").load('/RemoteFiles');
        $$("connButton").hide();
        $$("discButton").show();
    } else {
        $$("connButton").show();
        $$("discButton").hide();
    }

    addMessage(welcome, welcome_col);

    document.getElementById("selectedLocalDir").value = "";
    document.getElementById("selectedRemoteDir").value = "/";

    //$$("localFolders").select(document.getElementById("selectedLocalDir").value);
    //$$("remoteFolders").select(document.getElementById("selectedRemoteDir").value);

    webix.extend($$("localFiles"), webix.ProgressBar);
    webix.extend($$("remoteFiles"), webix.ProgressBar);

    webix.ui({
        view: "contextmenu",
        data: ["Download", "Delete"],
        on: {
            onItemClick: function (id) {
                var context = this.getContext();
                var tree = context.obj; //list item object
                var treeID = context.id; //id of the clicked list item
                if (id == "Download")
                    downloadRemoteFiles(treeID);
                if (id == "Delete")
                    deleteRemoteFiles(treeID);
            }
        }
    }).attachTo($$("remoteFiles"));

    webix.ui({
        view: "contextmenu",
        data: ["Upload"],
        on: {
            onItemClick: function (id) {
                var context = this.getContext();
                var tree = context.obj;
                var treeID = context.id;
                if (id == "Upload")
                    uploadLocalFiles(treeID);
            }
        }
    }).attachTo($$("localFiles"));
});

</script>
</body>
</html>